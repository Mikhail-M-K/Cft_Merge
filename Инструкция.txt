Инструкция по запуску:
Java version: 19

Создание jar файла в IntelliJ IDEA:

1.	Открыть проект в IntelliJ IDEA
2.	Project Structure -> Artifacts -> Jar -> From modules with dependencies
3.	Настроить новый артефакт, нужно выбрать главный класс, нажать ОК
4.	Для создания Jar файла нужно выбрать Build -> BuildArtifact
5.	Исполняемый файл будет сгенерирован в директории out -> artifacts
6.	Перенести файл к входным файлам

Запуск jar файла:
1.	Открыть командную строку.
2.	Ввести команду (пример):  cd C:\Users\user1\Desktop\cft_task (Путь к файлу jar)
3.	Ввести команду (пример): java -jar cft_Merge.jar -i out.tx 1.txt 2.tt 3 5 43d dfds – 44
4.	Выходным файлом является out.txt файл. 




Описание работы программы: 
Все параметры переводятся в нижний регистр для избежания проблем с ним. При этом важен порядок параметров, указанный в задании.

Сначала проводятся проверки на дублирующие параметры (и будут удалены параметры, начинающиеся с "-", которые находятся после первых двух позиций), а также на количество параметров. Минимальное количество параметров 3: (-i/-s out.txt in1.txt), при вводе меньшего числа параметров запускается цикл до момента ввода верного количества корректных параметров. Для введенных данных осуществляются проверки на поиск дублирующих параметров. Следом идет проверка на корректность типа данных и режима сортировки.

Затем осуществляются проверки имени выходного файла. Проводится проверка корректности расширения (.txt). При наличии точек, находится крайняя из них, после которой подставляется расширение (.txt) и производится проверка существования файла. Если файл не существует, происходит запись корректного параметра в первоначальный набор параметров. При существовании файла производится редактирование имени файла путем добавления числа в скобках, начиная с 1 (на данный момент стоит ограничение в 100). Если выполнение указанных действий не помогло, предлагается ввести новое имя выходного файла, после чего проводится набор проверок, описанных выше.
Последней проводится проверка параметров с именами входных файлов. Здесь также осуществляется проверка расширения, описанная в предыдущем пункте. При отсутствии файла параметр добавляется в лист для следующего удаления. После удаления аргументов выводится новый список параметров. После удаления параметров происходит проверка наличия входных файлов. Если не осталось параметров с входными данными, запускается цикл ввода новых имен через пробел.



